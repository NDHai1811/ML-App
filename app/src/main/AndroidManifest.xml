<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:installLocation="auto">
    <!--
 CameraX libraries require minSdkVersion 21, while this quickstart app
    supports low to 16. Needs to use overrideLibrary to make the merger tool
    ignore this conflict and import the libraries while keeping the app's lower
    minSdkVersion value. In code, will check SDK version, before calling CameraX
    APIs.
    -->
    <uses-sdk tools:overrideLibrary="           androidx.camera.camera2, androidx.camera.core,           androidx.camera.view, androidx.camera.lifecycle" />
    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the "MyLocation" functionality.
    -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <uses-feature android:name="android.hardware.camera" />

    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" /> <!-- Required for background location services on Q+ (10) -->
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" /> <!-- Required for foreground services on P+ (9), this is normal permission -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />

    <application
        android:name="androidx.multidex.MultiDexApplication"
        android:icon="@drawable/logodawn"
        android:label="@string/app_name"
        android:theme="@style/AppTheme">
        <activity
            android:name=".NotifiContainer"
            android:exported="false" />
        <activity
            android:name=".map.MapContainer"
            android:exported="false" />

        <service
            android:name=".MyFirebaseMessagingService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name=".map.MyLocationService"
            android:enabled="true"
            android:exported="false" />

        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@drawable/ic_card_giftcard_white_24dp" />
        <!--
 Set color used with incoming notification messages. This is used when no color is set for the incoming
             notification message. See README(https://goo.gl/6BKBk7) for more.
        -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_color"
            android:resource="@color/colorAccent" /> <!-- [END fcm_default_icon] -->
        <!-- [START fcm_default_channel] -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_channel_id"
            android:value="@string/default_notification_channel_id" /> <!-- [END fcm_default_channel] -->
        <activity
            android:name=".notification.GenerateTokenActivity"
            android:exported="false" />
        <activity
            android:name=".LuatXP"
            android:exported="false" /> <!-- To use multiple models: android:value="face,model2,model3" -->
        <activity
            android:name=".web.WebActivity"
            android:exported="false"
            android:windowSoftInputMode="adjustPan" />
        <activity
            android:name=".note"
            android:exported="false" />
        <activity
            android:name=".trafficsign"
            android:exported="false" />
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".ui.TestUi"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:parentActivityName=".ui.MainActivity">
            <intent-filter>
                <action android:name="OPEN_ACTIVITY_2" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.SplashActivity"
            android:exported="true"
            android:theme="@style/SplashTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.MainActivity"
            android:exported="false" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <!--
 Optional: Add it to automatically download ML model to device after
          your app is installed.
        -->
        <meta-data
            android:name="com.google.mlkit.vision.DEPENDENCIES"
            android:value="face" />

        <activity
            android:name=".java.LivePreviewActivity"
            android:configChanges="orientation|screenLayout|keyboardHidden"
            android:exported="true"
            android:theme="@style/AppTheme">

            <!-- <intent-filter> -->
            <!-- <action android:name="android.intent.action.MAIN" /> -->


            <!-- <category android:name="android.intent.category.LAUNCHER" /> -->
            <!-- </intent-filter> -->
        </activity>
        <activity
            android:name=".preference.SettingsActivity"
            android:exported="false" />
    </application>

</manifest>